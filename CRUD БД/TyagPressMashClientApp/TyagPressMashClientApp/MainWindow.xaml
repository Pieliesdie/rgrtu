<Window x:Class="TyagPressMashClientApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:TyagPressMashClientApp"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"       
        Title="База данных &quot;Тяжпрессмаш&quot;" MinHeight="300" Height="450" Width="800" WindowStartupLocation="CenterScreen">
    <Grid>
        <materialDesign:DrawerHost  
            x:Name="DrawerHost"          
            BorderThickness="2"
            BorderBrush="{DynamicResource MaterialDesignDivider}">

            <!--Left menu-->
            <materialDesign:DrawerHost.LeftDrawerContent>
                <StackPanel                  
                    Margin="16">
                    <ToggleButton  
                        Click="ToggleButton_Click"
                        IsChecked="{Binding ElementName=DrawerHost,Path=IsLeftDrawerOpen}"
                        Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"                       
                        CommandParameter="{x:Static Dock.Left}"
                        Margin="4"
                        x:Name="MenuHideButton"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}">
                    </ToggleButton>

                    <Button x:Name="PositionsButton" Click="PositionsButton_Click" FontSize="18" Style="{StaticResource MaterialDesignFlatButton}">
                        Должности
                    </Button>

                    <Button x:Name="PaymentsButton" Click="PaymentsButton_Click" FontSize="18" Style="{StaticResource MaterialDesignFlatButton}">
                        Доплаты
                    </Button>

                    <Button x:Name="OrdersButton" Click="OrdersButton_Click" FontSize="18" Style="{StaticResource MaterialDesignFlatButton}">
                        Заказы
                    </Button>

                    <Button x:Name="ProductsButton" Click="ProductsButton_Click" FontSize="18" Style="{StaticResource MaterialDesignFlatButton}">
                        Продукция
                    </Button>

                    <Button x:Name="WorkshopsProductsButton" Click="WorkshopsProductsButton_Click" FontSize="18" Style="{StaticResource MaterialDesignFlatButton}">
                        Производимая продукция в цехах
                    </Button>

                    <Button x:Name="EmployeesButton" Click="EmployeesButton_Click"  FontSize="18" Style="{StaticResource MaterialDesignFlatButton}">
                        Сотрудники
                    </Button>

                    <Button x:Name="WorkshopsButton" Click="WorkshopsButton_Click"  FontSize="18" Style="{StaticResource MaterialDesignFlatButton}">
                        Цеха
                    </Button>
                </StackPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <!--Left menu-->

            <DockPanel>
                <!--Main menu-->
                <Menu DockPanel.Dock="Top" FontSize="16" IsMainMenu="True" >
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <DockPanel HorizontalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>

                    <ToggleButton
                            Click="ToggleButton_Click"
                            Foreground="White"
                            IsChecked="{Binding ElementName=DrawerHost,Path=IsLeftDrawerOpen}"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                            Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                            CommandParameter="{x:Static Dock.Left}" >
                        <materialDesign:PackIcon  Kind="ArrowLeft" />
                    </ToggleButton>
                    <MenuItem Header="Меню" Name="MenuButton" Foreground="{DynamicResource MaterialDesignPaper}">
                        <MenuItem Header="Обновить базу данных" Name="UpdateDB" Click="UpdateDB_Click">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Restore" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Сохранить изменения" Name="SaveDB" Click="SaveDB_Click">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon
                                    Kind="ContentSaveAll" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem x:Name="ExitButton" Header="Выход" Click="ExitButton_Click">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="ExitToApp" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem FontSize="20" Foreground="{DynamicResource MaterialDesignPaper}"                                                    
                           HorizontalAlignment="Right" IsEnabled="False" FontFamily="Regular"
                           Opacity="1">
                        <MenuItem.Header>
                            <TextBlock  Text="{Binding CurrentPage.Value,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <Menu.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#cd50f0" Offset="0.0" />
                            <GradientStop Color="#5726f5" Offset="0.6" />
                        </LinearGradientBrush>
                    </Menu.Background>
                </Menu>
                <!--Main menu-->

                <TabControl x:Name="tabCntrl" >
                    <!--Таблица сотрудников-->
                    <TabItem Name="EmployeesGrid" Visibility="Hidden" >
                        <DataGrid IsEnabled="{Binding ElementName=EmployeesGrid,Path=IsSelected}" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" ItemsSource="{Binding BDViewModel.Employees}" CanUserAddRows="True" IsReadOnly="{Binding IsUpdating.Value}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Имя" Binding="{Binding Имя,UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Фамилия" Binding="{Binding Фамилия,UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Отчество" Binding="{Binding Отчество,UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTemplateColumn Header="Дата рождения" SortMemberPath="ДатаРождения">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ДатаРождения,StringFormat=\{0:dd.MM.yy\}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate ="{Binding ДатаРождения,UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Серия паспорта" Binding="{Binding СерияПаспорта,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Номер паспорта" Binding="{Binding НомерПаспорта,UpdateSourceTrigger=PropertyChanged}"/>
                                <materialDesign:DataGridComboBoxColumn Header="Образование" SelectedValueBinding="{Binding Образование,UpdateSourceTrigger=PropertyChanged}"
                                                                       ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Educations}" />
                                <DataGridCheckBoxColumn Header="Инвалидность" Binding="{Binding Инвалидность,UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}" EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"/>
                                <DataGridTemplateColumn Header="Дата заключения договора" Width="120" SortMemberPath="ДатаРождения">
                                    <DataGridTemplateColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Center" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTemplateColumn.HeaderStyle>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Center" Text="{Binding ДатаЗаключенияДоговора,StringFormat=\{0:dd.MM.yy\}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate ="{Binding ДатаЗаключенияДоговора,UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <materialDesign:DataGridComboBoxColumn Header="Цех"
                                                                       SelectedValuePath="Код"
                                                                       SelectedValueBinding="{Binding Цех,UpdateSourceTrigger=PropertyChanged}"
                                                                       ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.BDViewModel.Workshops}" />
                                <materialDesign:DataGridComboBoxColumn Header="Должность"
                                                                       SelectedValuePath="Код"
                                                                       SelectedValueBinding="{Binding Должность,UpdateSourceTrigger=PropertyChanged}"                                                                    
                                                                       ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.BDViewModel.Positions}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <!--Таблица сотрудников-->

                    <!--Таблица должностей-->
                    <TabItem Name="PositionsGrid" Visibility="Hidden">
                        <DataGrid IsEnabled="{Binding ElementName=PositionsGrid,Path=IsSelected}" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" ItemsSource="{Binding BDViewModel.Positions}" CanUserAddRows="True" IsReadOnly="{Binding IsUpdating.Value}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Название" Binding="{Binding Название,UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTemplateColumn Header="Время создания" SortMemberPath="ВремяСоздания">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ВремяСоздания,StringFormat=\{0:dd.MM.yy\}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate ="{Binding ВремяСоздания,UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridCheckBoxColumn Header="Опасность" Binding="{Binding Опасность}" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}" EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                                    <DataGridCheckBoxColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}" TextAlignment="Center" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridCheckBoxColumn.HeaderStyle>
                                </DataGridCheckBoxColumn>
                                <DataGridTextColumn Header="Оклад , ₽" Binding="{Binding Оклад,UpdateSourceTrigger=PropertyChanged}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <!--Таблица должностей-->

                    <!--Таблица доплат-->
                    <TabItem Name="PaymentsGrid" Visibility="Hidden">
                        <DataGrid IsEnabled="{Binding ElementName=PaymentsGrid,Path=IsSelected}" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" ItemsSource="{Binding BDViewModel.Payments}" CanUserAddRows="True" IsReadOnly="{Binding IsUpdating.Value}">
                            <DataGrid.Columns>
                                <materialDesign:DataGridComboBoxColumn Header="Сотрудник"
                                                                       SelectedValuePath="Код"
                                                                       SelectedValueBinding="{Binding Сотрудник,UpdateSourceTrigger=LostFocus}"                                                                    
                                                                       ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.BDViewModel.Employees}" />
                                <DataGridTextColumn Header="Размер" Binding="{Binding Размер,UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Причина" Binding="{Binding Причина,UpdateSourceTrigger=PropertyChanged}"/>
                            </DataGrid.Columns>
                        </DataGrid>

                    </TabItem>
                    <!--Таблица доплат-->

                    <!--Таблица заказов-->
                    <TabItem Name="OrdersGrid" Visibility="Hidden">

                    </TabItem>
                    <!--Таблица заказов-->

                    <TabItem Name="ProductsGrid" Visibility="Hidden">

                    </TabItem>
                    <TabItem Name="WorkshopsProductsGrid" Visibility="Hidden">

                    </TabItem>
                    <TabItem Name="WorkshopsGrid" Visibility="Hidden">

                    </TabItem>
                </TabControl>
            </DockPanel>
        </materialDesign:DrawerHost>
    </Grid>
</Window>
